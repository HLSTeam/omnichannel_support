// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model System {
  id           String         @id @default(uuid())
  name         String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  channels     Channel[]
  conversations Conversation[] // Một hệ thống có thể có nhiều cuộc trò chuyện
}

model Channel {
  id           String         @id @default(uuid())
  type         String
  token        String?
  systemId     String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  system       System         @relation(fields: [systemId], references: [id])
  conversations Conversation[] // Một kênh có thể có nhiều cuộc trò chuyện
  @@unique([systemId, type])
}

// --- MODEL MỚI: Cuộc trò chuyện ---
model Conversation {
  id        String   @id @default(uuid())
  // ID của cuộc trò chuyện từ phía nền tảng (VD: chat.id của Telegram)
  platformChatId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name      String? // Tên của cuộc trò chuyện (tên nhóm hoặc tên người dùng)
  type      String // 'private', 'group', hoặc 'supergroup'

  systemId  String
  system    System   @relation(fields: [systemId], references: [id])
  
  channelId String
  channel   Channel  @relation(fields: [channelId], references: [id])
  
  // Một cuộc trò chuyện có nhiều tin nhắn
  messages  Message[]

  // Đảm bảo không có 2 cuộc trò chuyện trùng platformChatId trên cùng một kênh
  @@unique([channelId, platformChatId])
}

// --- MODEL MỚI: Tin nhắn ---
model Message {
  id        String   @id @default(uuid())
  // ID của tin nhắn từ phía nền tảng (VD: message_id của Telegram)
  platformMessageId String   @unique
  text              String?  // Nội dung tin nhắn
  sender            String   // Ai là người gửi? "USER" hoặc "AGENT"
  createdAt         DateTime @default(now())
  
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
}

model Rule {
  id        String   @id @default(uuid())
  keyword   String   // Từ khóa để kích hoạt
  response  String   @db.Text // Nội dung bot sẽ trả lời, dùng @db.Text để có thể lưu nội dung dài
  systemId  String
  createdAt DateTime @default(now())

  // Quan hệ: Một luật thuộc về một hệ thống
  system System @relation(fields: [systemId], references: [id])

  // Đảm bảo từ khóa là duy nhất trong phạm vi một hệ thống
  @@unique([systemId, keyword])
}